#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
"""

import argparse
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É sections –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / 'sections'))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ —Ä–∞–∑–¥–µ–ª–æ–≤
try:
    import admin
    import initiation
    import requirements
    import data
    import analytics
    import solution
    import delivery
    import quality
    import docs
    import cursor_config
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –≤ –ø–∞–ø–∫–µ scripts/sections/")
    sys.exit(1)


def create_directory(path: Path) -> None:
    """–°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    path.mkdir(parents=True, exist_ok=True)


def write_text_file(path: Path, content: str) -> None:
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –≤ UTF-8"""
    path.parent.mkdir(parents=True, exist_ok=True)
    with open(path, 'w', encoding='utf-8') as f:
        f.write(content)


def create_base_structure(root: Path) -> None:
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    directories = [
        '00_–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '01_–ò–Ω–∏—Ü–∏–∞—Ü–∏—è_–∏_–∫–æ–Ω—Ç–µ–∫—Å—Ç',
        '02_–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è', 
        '03_–î–∞–Ω–Ω—ã–µ',
        '04_–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '05_–†–µ—à–µ–Ω–∏–µ_–∏_–¥–∏–∑–∞–π–Ω',
        '06_–ü–æ—Å—Ç–∞–≤–∫–∞_–∏_–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å',
        '07_–ö–∞—á–µ—Å—Ç–≤–æ_–∏_—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '08_–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è'
    ]
    
    for dir_path in directories:
        create_directory(root / dir_path)


def create_top_level_files(root: Path) -> None:
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è"""
    
    # README.md
    write_text_file(root / 'README.md', f"""# {root.name}

–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É.

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
- 00_–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º, –±—Ä–∏—Ñ, —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä—ã
- 01_–ò–Ω–∏—Ü–∏–∞—Ü–∏—è_–∏_–∫–æ–Ω—Ç–µ–∫—Å—Ç ‚Äî –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
- 02_–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è ‚Äî —Ñ–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (BRD, SRS)
- 03_–î–∞–Ω–Ω—ã–µ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
- 04_–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Äî –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
- 05_–†–µ—à–µ–Ω–∏–µ_–∏_–¥–∏–∑–∞–π–Ω ‚Äî –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è
- 06_–ü–æ—Å—Ç–∞–≤–∫–∞_–∏_–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
- 07_–ö–∞—á–µ—Å—Ç–≤–æ_–∏_—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
- 08_–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è ‚Äî —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

## –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
1. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ `00_–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ/–±—Ä–∏—Ñ.md`
2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
3. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
4. –§–æ—Ä–º–∞–ª–∏–∑—É–π—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤ BRD/SRS

–°–º. —Ç–∞–∫–∂–µ `.cursor/–ø—Ä–æ–º–ø—Ç—ã/` –¥–ª—è –≥–æ—Ç–æ–≤—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤.
""")
    
    # CONTRIBUTING.md
    write_text_file(root / 'CONTRIBUTING.md', """# –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–µ–∫—Ç–æ–º

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
- –°–ª–µ–¥—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ø–∞–ø–æ–∫
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- –í–µ–¥–∏—Ç–µ –∂—É—Ä–Ω–∞–ª —Ä–µ—à–µ–Ω–∏–π –≤ `00_–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ/–∂—É—Ä–Ω–∞–ª_—Ä–µ—à–µ–Ω–∏–π_ADR.md`

## Workflow
1. –û–±–Ω–æ–≤–ª—è–π—Ç–µ CHANGELOG.md –ø—Ä–∏ –∑–Ω–∞—á–∏–º—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ADR-—Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π
3. –ü–µ—Ä–µ–Ω–æ—Å–∏—Ç–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ `99_–ê—Ä—Ö–∏–≤/`

## –ö—Ä–∏—Ç–µ—Ä–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
- [ ] –ó–∞–ø–æ–ª–Ω–µ–Ω –±—Ä–∏—Ñ –ø—Ä–æ–µ–∫—Ç–∞
- [ ] –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏–µ–º–∫–∏
- [ ] –°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
- [ ] –ü—Ä–æ–≤–µ–¥–µ–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏—è
""")
    
    # CHANGELOG.md
    write_text_file(root / 'CHANGELOG.md', """# –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

## [0.1.0] - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
- –°–æ–∑–¥–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
- –î–æ–±–∞–≤–ª–µ–Ω—ã —à–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è Cursor
""")
    
    # CODEOWNERS
    write_text_file(root / 'CODEOWNERS', """# –í–ª–∞–¥–µ–ª—å—Ü—ã –∫–æ–¥–∞
* @team-analytics

# –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
00_–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ/ @lead-analyst
02_–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è/ @business-analyst @lead-analyst
07_–ö–∞—á–µ—Å—Ç–≤–æ_–∏_—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ/ @qa-lead
""")
    
    # .cursorignore
    write_text_file(root / '.cursorignore', """# –ê—Ä—Ö–∏–≤
99_–ê—Ä—Ö–∏–≤/

# –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
**/*.csv
**/*.parquet
**/*.xlsx
**/*.json
**/*.xml

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
**/*.tmp
**/tmp/
**/temp/
**/.ipynb_checkpoints/
**/build/
**/dist/

# –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
**/.DS_Store
**/Thumbs.db
""")


def main():
    parser = argparse.ArgumentParser(
        description='–°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Å –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π'
    )
    parser.add_argument(
        '--name', '-n',
        default='–ù–æ–≤—ã–π_–ü—Ä–æ–µ–∫—Ç',
        help='–ò–º—è –ø—Ä–æ–µ–∫—Ç–∞'
    )
    parser.add_argument(
        '--destination', '-d', 
        default='.',
        help='–ü—É—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞'
    )
    parser.add_argument(
        '--sections', '-s',
        nargs='*',
        help='–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –≤—Å–µ)'
    )
    parser.add_argument(
        '--as-template',
        action='store_true',
        help='–°–æ–∑–¥–∞—Ç—å –∫–∞–∫ —à–∞–±–ª–æ–Ω —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏'
    )
    
    args = parser.parse_args()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏
    destination = Path(args.destination)
    project_root = destination / args.name
    
    print(f"üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: {project_root}")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –≤ Windows
    if "—Ä–æ–µ–∫—Ç–∞" in str(project_root) or "—Ä–æ–µ–∫—Ç" in str(project_root):
        corrected_name = args.name.replace("—Ä–æ–µ–∫—Ç–∞", "–ü—Ä–æ–µ–∫—Ç–∞").replace("—Ä–æ–µ–∫—Ç", "–ü—Ä–æ–µ–∫—Ç")
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
        corrected_name = corrected_name.replace("–ü–ü—Ä–æ–µ–∫—Ç–∞", "–ü—Ä–æ–µ–∫—Ç–∞")
        project_root = destination / corrected_name
        print(f"üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–º—è –Ω–∞: {project_root}")
    
    # –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
    create_base_structure(project_root)
    create_top_level_files(project_root)
    
    # –ú–æ–¥—É–ª–∏ —Ä–∞–∑–¥–µ–ª–æ–≤
    sections_map = {
        'admin': admin,
        'initiation': initiation, 
        'requirements': requirements,
        'data': data,
        'analytics': analytics,
        'solution': solution,
        'delivery': delivery,
        'quality': quality,
        'docs': docs,
        'cursor': cursor_config
    }
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–∏–µ —Ä–∞–∑–¥–µ–ª—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å
    if args.sections:
        selected_sections = {k: v for k, v in sections_map.items() if k in args.sections}
    else:
        selected_sections = sections_map
    
    # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–¥–µ–ª—ã
    for section_name, module in selected_sections.items():
        try:
            print(f"üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞: {section_name}")
            module.create_section(project_root, as_template=args.as_template)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ {section_name}: {e}")
    
    print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: {project_root.absolute()}")
    
    if args.as_template:
        print("üìù –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏")
    else:
        print("üìù –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞–º–∏")


if __name__ == '__main__':
    main()
