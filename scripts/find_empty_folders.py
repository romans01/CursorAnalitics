#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ –ø—É—Å—Ç—ã—Ö –ø–∞–ø–æ–∫ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö
"""

from pathlib import Path


def find_empty_folders(project_path: Path):
    """–ù–∞—Ö–æ–¥–∏—Ç –ø—É—Å—Ç—ã–µ –ø–∞–ø–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ"""
    empty_folders = []
    
    for item in project_path.rglob('*'):
        if item.is_dir():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
            files = list(item.iterdir())
            if not files:
                empty_folders.append(item.relative_to(project_path))
    
    return empty_folders


def main():
    projects = ['–®–∞–±–ª–æ–Ω_–ü—Ä–æ–µ–∫—Ç–∞', '–ü—Ä–∏–º–µ—Ä_–ü—Ä–æ–µ–∫—Ç–∞']
    
    for project_name in projects:
        project_path = Path(project_name)
        if not project_path.exists():
            print(f"‚ùå –ü—Ä–æ–µ–∫—Ç {project_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            continue
            
        print(f"\nüìÅ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞: {project_name}")
        print("=" * 50)
        
        empty_folders = find_empty_folders(project_path)
        
        if empty_folders:
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(empty_folders)} –ø—É—Å—Ç—ã—Ö –ø–∞–ø–æ–∫:")
            for folder in sorted(empty_folders):
                print(f"   üìÇ {folder}")
        else:
            print("‚úÖ –ü—É—Å—Ç—ã—Ö –ø–∞–ø–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")


if __name__ == '__main__':
    main()
