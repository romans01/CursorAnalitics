#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
"""

import os
from pathlib import Path
from datetime import datetime
import subprocess


def ask_question(question: str, default: str = "") -> str:
    """–ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    if default:
        prompt = f"{question} [{default}]: "
    else:
        prompt = f"{question}: "
    
    answer = input(prompt).strip()
    return answer if answer else default


def ask_yes_no(question: str, default: bool = True) -> bool:
    """–ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –¥–∞/–Ω–µ—Ç"""
    default_str = "Y/n" if default else "y/N"
    answer = input(f"{question} [{default_str}]: ").strip().lower()
    
    if not answer:
        return default
    
    return answer in ['y', 'yes', '–¥–∞', '–¥']


def create_project_brief(project_path: Path, project_info: dict):
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –±—Ä–∏—Ñ –ø—Ä–æ–µ–∫—Ç–∞"""
    brief_path = project_path / '00_–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ' / '–±—Ä–∏—Ñ.md'
    
    brief_content = f"""# –ë—Ä–∏—Ñ –ø—Ä–æ–µ–∫—Ç–∞: {project_info['name']}

## –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∏

**–ü—Ä–æ–±–ª–µ–º–∞:** {project_info['problem']}

**–¢–µ–∫—É—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è:** {project_info['current_situation']}

## –¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞

### –ë–∏–∑–Ω–µ—Å-—Ü–µ–ª–∏
- [ ] **–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å:** {project_info['main_goal']}
- [ ] **–ú–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—Ö–∞:** {project_info['success_metrics']}
- [ ] **–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏:** {project_info['timeline']}

## –£—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞

**–ó–∞–∫–∞–∑—á–∏–∫:** {project_info['customer']}  
**–ê–Ω–∞–ª–∏—Ç–∏–∫:** {project_info['analyst']}  
**–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:** {project_info['dev_team']}

## –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è

**–ë—é–¥–∂–µ—Ç:** {project_info['budget']}  
**–°—Ä–æ–∫–∏:** {project_info['deadline']}  
**–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:** {project_info['tech_constraints']}

## –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

{project_info['expected_results']}

---
*–°–æ–∑–¥–∞–Ω–æ: {datetime.now().strftime('%Y-%m-%d')}*
*–ê–Ω–∞–ª–∏—Ç–∏–∫: {project_info['analyst']}*
"""
    
    with open(brief_path, 'w', encoding='utf-8') as f:
        f.write(brief_content)


def create_stakeholders(project_path: Path, project_info: dict):
    """–°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω"""
    stakeholders_path = project_path / '00_–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ' / '–∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–µ_—Å—Ç–æ—Ä–æ–Ω—ã.md'
    
    content = f"""# –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –ø—Ä–æ–µ–∫—Ç–∞

## –û—Å–Ω–æ–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏

### üéØ –ó–∞–∫–∞–∑—á–∏–∫
**{project_info['customer']}**
- –†–æ–ª—å: –í–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ–¥—É–∫—Ç–∞
- –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å: –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á, –ø—Ä–∏–µ–º–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
- –ö–æ–Ω—Ç–∞–∫—Ç—ã: {project_info.get('customer_contact', '—É–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã')}

### üë®‚Äçüíª –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞
**–ê–Ω–∞–ª–∏—Ç–∏–∫:** {project_info['analyst']}  
**–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:** {project_info['dev_team']}

## –ú–∞—Ç—Ä–∏—Ü–∞ RACI

| –ó–∞–¥–∞—á–∞ | {project_info['customer']} | {project_info['analyst']} | –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ | –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ |
|--------|------------|------------|------------|--------------|
| –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è | A | R | C | I |
| –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö | I | R | C | I |
| –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ | A | C | R | C |
| –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ | A | C | C | R |

**–õ–µ–≥–µ–Ω–¥–∞:**
- R (Responsible) - –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å
- A (Accountable) - –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π  
- C (Consulted) - –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç
- I (Informed) - –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º—ã–π

---
*–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d')}*
"""
    
    with open(stakeholders_path, 'w', encoding='utf-8') as f:
        f.write(content)


def setup_git_and_cursor(project_path: Path):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Git –∏ Cursor –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞"""
    os.chdir(project_path)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git
    try:
        subprocess.run(['git', 'init'], check=True, capture_output=True)
        subprocess.run(['git', 'add', '.'], check=True, capture_output=True)
        subprocess.run(['git', 'commit', '-m', 'Initial project structure'], check=True, capture_output=True)
        print("‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    except subprocess.CalledProcessError:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Git (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")
    except FileNotFoundError:
        print("‚ö†Ô∏è Git –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")


def main():
    print("üöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞")
    print("=" * 50)
    
    # –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
    project_info = {}
    
    print("\nüìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    project_info['name'] = ask_question("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞_–ù–æ–≤—ã–π_–ü—Ä–æ–µ–∫—Ç")
    project_info['problem'] = ask_question("–ö–∞–∫—É—é –ø—Ä–æ–±–ª–µ–º—É —Ä–µ—à–∞–µ–º?", "–ù—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")
    project_info['current_situation'] = ask_question("–ö–∞–∫ —Ä–µ—à–∞–µ—Ç—Å—è –ø—Ä–æ–±–ª–µ–º–∞ —Å–µ–π—á–∞—Å?", "–†—É—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    print("\nüéØ –¶–µ–ª–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    project_info['main_goal'] = ask_question("–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞", "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã")
    project_info['success_metrics'] = ask_question("–ú–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—Ö–∞", "–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ 50%")
    project_info['timeline'] = ask_question("–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏", "2-3 –º–µ—Å—è—Ü–∞")
    project_info['expected_results'] = ask_question("–û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥—ã –∏ –æ—Ç—á–µ—Ç—ã")
    
    print("\nüë• –ö–æ–º–∞–Ω–¥–∞:")
    project_info['customer'] = ask_question("–ó–∞–∫–∞–∑—á–∏–∫", "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞")
    project_info['analyst'] = ask_question("–ê–Ω–∞–ª–∏—Ç–∏–∫", os.getenv('USERNAME', '–ê–Ω–∞–ª–∏—Ç–∏–∫'))
    project_info['dev_team'] = ask_question("–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", "Backend + Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏")
    
    print("\nüí∞ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:")
    project_info['budget'] = ask_question("–ë—é–¥–∂–µ—Ç", "–í —Ä–∞–º–∫–∞—Ö —Å–ø—Ä–∏–Ω—Ç–∞")
    project_info['deadline'] = ask_question("–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫", "–ö–æ–Ω–µ—Ü –∫–≤–∞—Ä—Ç–∞–ª–∞")
    project_info['tech_constraints'] = ask_question("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
    print("\n‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    use_template = ask_yes_no("–°–æ–∑–¥–∞—Ç—å —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ —à–∞–±–ª–æ–Ω–∞–º–∏?", True)
    setup_git = ask_yes_no("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π?", True)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
    print(f"\nüî® –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ '{project_info['name']}'...")
    
    # –í—ã–∑–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    cmd = ['python', 'scripts/create_project.py', '--name', project_info['name']]
    if use_template:
        cmd.append('--as-template')
    
    try:
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {e}")
        return
    
    project_path = Path(project_info['name'])
    
    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±—Ä–∏—Ñ–∞ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    print("üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±—Ä–∏—Ñ–∞ –ø—Ä–æ–µ–∫—Ç–∞...")
    create_project_brief(project_path, project_info)
    create_stakeholders(project_path, project_info)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git
    if setup_git:
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git...")
        setup_git_and_cursor(project_path)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CSV —Ñ–∞–π–ª–æ–≤ –µ—Å–ª–∏ —ç—Ç–æ —à–∞–±–ª–æ–Ω
    if use_template:
        print("üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
        try:
            subprocess.run(['python', 'scripts/add_missing_files.py'], check=True, capture_output=True)
        except subprocess.CalledProcessError:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤")
    
    print("\nüéâ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
    print("=" * 50)
    print(f"üìÅ –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É: {project_path.absolute()}")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ Cursor")
    print("2. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º")
    print("3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å—Ç–æ—Ä–∏–∏")
    print("4. –ù–∞—á–Ω–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö")
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
    if ask_yes_no("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –æ —Å—Ç–∞—Ç—É—Å–µ –ø—Ä–æ–µ–∫—Ç–∞?", True):
        try:
            subprocess.run(['python', 'scripts/generate_status_report.py', '--project', str(project_path)], 
                         check=True)
        except subprocess.CalledProcessError:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç –æ —Å—Ç–∞—Ç—É—Å–µ")


if __name__ == '__main__':
    main()
