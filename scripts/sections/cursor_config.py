#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Модуль создания конфигурации .cursor
"""

import json
from pathlib import Path


def write_text_file(path: Path, content: str) -> None:
    """Записывает текстовый файл в UTF-8"""
    path.parent.mkdir(parents=True, exist_ok=True)
    with open(path, 'w', encoding='utf-8') as f:
        f.write(content)


def create_section(root: Path, as_template: bool = False) -> None:
    """Создает конфигурацию .cursor"""
    
    cursor_path = root / '.cursor'
    cursor_path.mkdir(exist_ok=True)
    
    # settings.json
    cursor_settings = {
        "version": 1,
        "projectLanguage": "ru",
        "promptPacks": ["требования", "тест-дизайн", "UAT", "ревью-ТЗ", "аналитика"],
        "defaultModel": "claude-3.5-sonnet",
        "rules": [
            "Всегда отвечать на русском языке",
            "Использовать принятую структуру проекта",
            "Ссылаться на ADR при архитектурных решениях"
        ]
    }
    
    with open(cursor_path / 'settings.json', 'w', encoding='utf-8') as f:
        json.dump(cursor_settings, f, ensure_ascii=False, indent=2)
    
    # Промпты
    prompts_path = cursor_path / 'промпты'
    prompts_path.mkdir(exist_ok=True)
    
    write_text_file(prompts_path / 'уточнение_требований.md', """# Уточнение требований

Ты — опытный бизнес-аналитик. Помоги уточнить и детализировать требования.

## Контекст
Я работаю над аналитическим проектом и нужно собрать полные требования от заказчика.

## Задача
Проанализируй предоставленную информацию и задай уточняющие вопросы по методологии:

### Роли и пользователи
- Кто будет использовать решение?
- Какие у них роли и полномочия?
- Сколько пользователей ожидается?

### Сценарии использования
- Какие основные бизнес-процессы затрагиваются?
- Как пользователи будут взаимодействовать с системой?
- Какие исключительные ситуации возможны?

### Данные и интеграции
- Какие данные нужны и откуда они берутся?
- С какими системами нужна интеграция?
- Какие требования к качеству данных?

### Ограничения и требования
- Есть ли ограничения по времени, бюджету, технологиям?
- Какие требования к производительности, безопасности?
- Нужна ли совместимость с существующими системами?

### Критерии успеха
- Как мы поймем, что задача решена?
- Какие метрики будем отслеживать?
- Что является обязательным, а что желательным?

Формулируй вопросы конкретно и структурированно.
""")
    
    write_text_file(prompts_path / 'тест_кейсы.md', """# Генерация тест-кейсов

Ты — опытный QA-аналитик. Помоги создать тест-кейсы для проверки требований.

## Задача
На основе предоставленных требований и критериев приемки создай детальные тест-кейсы.

### Структура тест-кейса
Для каждого тест-кейса укажи:

**ID:** TC-XXX  
**Название:** Краткое описание  
**Приоритет:** Высокий/Средний/Низкий  
**Тип:** Позитивный/Негативный/Граничный  

**Предусловия:**
- Что должно быть настроено/подготовлено

**Шаги:**
1. Действие 1
2. Действие 2  
3. Действие 3

**Ожидаемый результат:**
Что должно произойти

**Тестовые данные:**
Какие данные использовать

### Покрытие
Создай тест-кейсы для:
- ✅ Позитивные сценарии (happy path)
- ✅ Негативные сценарии (ошибки, исключения)
- ✅ Граничные условия (лимиты, пустые значения)
- ✅ Интеграционные сценарии
- ✅ Производительность (если применимо)
- ✅ Безопасность (если применимо)

Группируй тест-кейсы по функциональным областям.
""")
    
    write_text_file(prompts_path / 'UAT.md', """# Планирование UAT (User Acceptance Testing)

Ты — аналитик по тестированию. Помоги спланировать пользовательское тестирование.

## Задача
Создай план UAT для проверки соответствия решения бизнес-потребностям.

### Цели UAT
- Подтвердить, что система решает бизнес-задачи
- Проверить удобство использования
- Убедиться в готовности к внедрению

### Участники
Определи:
- **Бизнес-пользователи:** кто будет тестировать
- **Координатор UAT:** кто организует процесс  
- **Техническая поддержка:** кто помогает с проблемами

### Сценарии UAT
Создай бизнес-сценарии:

**Сценарий 1:** [Название]
- **Роль:** Какой пользователь
- **Цель:** Что хочет достичь
- **Шаги:** Последовательность действий
- **Критерии успеха:** Как понять, что сценарий прошел

### Тестовая среда
- Какие данные подготовить
- Какие доступы нужны
- Какая инфраструктура требуется

### Критерии завершения UAT
- X% сценариев выполнены успешно
- Критичные дефекты исправлены
- Пользователи дали положительную оценку
- Документация готова

### План
- **Подготовка:** X дней
- **Выполнение:** X дней  
- **Анализ результатов:** X дней
- **Устранение замечаний:** X дней

Сфокусируйся на реальных бизнес-процессах, а не на технических деталях.
""")
    
    write_text_file(prompts_path / 'ревью_ТЗ.md', """# Ревью технического задания

Ты — опытный системный аналитик. Проведи экспертное ревью ТЗ.

## Задача
Проанализируй техническое задание на предмет:

### Полнота
- ✅ Все ли требования покрыты?
- ✅ Есть ли пробелы в функциональности?
- ✅ Описаны ли нефункциональные требования?
- ✅ Определены ли интерфейсы и интеграции?

### Непротиворечивость  
- ✅ Нет ли конфликтующих требований?
- ✅ Согласованы ли зависимости между компонентами?
- ✅ Соответствуют ли требования архитектуре?

### Тестопригодность
- ✅ Можно ли проверить каждое требование?
- ✅ Определены ли критерии приемки?
- ✅ Есть ли метрики для измерения?

### Реализуемость
- ✅ Реалистичны ли требования технически?
- ✅ Достаточно ли ресурсов и времени?
- ✅ Учтены ли ограничения инфраструктуры?

### Качество документации
- ✅ Понятны ли формулировки?
- ✅ Используется ли единая терминология?
- ✅ Есть ли диаграммы и схемы где нужно?

## Формат ответа
Для каждой проблемы укажи:
- **Категория:** Полнота/Непротиворечивость/Тестопригодность/Реализуемость
- **Критичность:** Высокая/Средняя/Низкая
- **Описание:** В чем проблема
- **Рекомендация:** Как исправить

В конце дай общую оценку готовности ТЗ к разработке.
""")
    
    write_text_file(prompts_path / 'аналитика.md', """# Помощь в аналитике данных

Ты — опытный data analyst. Помоги с анализом данных и интерпретацией результатов.

## Задача
Проанализируй предоставленные данные и дай рекомендации.

### Исследовательский анализ
- Изучи структуру и качество данных
- Найди аномалии и выбросы
- Определи основные паттерны и тренды
- Проверь гипотезы статистическими методами

### Визуализация
Предложи подходящие типы графиков:
- Временные ряды → линейные графики
- Категории → столбчатые диаграммы  
- Корреляции → scatter plots
- Распределения → гистограммы
- Геоданные → карты

### Интерпретация результатов
- Объясни находки простым языком
- Укажи ограничения анализа
- Предложи дальнейшие исследования
- Сформулируй бизнес-рекомендации

### Проверка гипотез
Для каждой гипотезы:
- Сформулируй H0 и H1
- Выбери подходящий статистический тест
- Интерпретируй p-value и доверительные интервалы
- Сделай вывод о статистической значимости

### Рекомендации
- Что делать на основе результатов?
- Какие дополнительные данные собрать?
- Как автоматизировать анализ?
- Какие метрики отслеживать?

Фокусируйся на практической ценности для бизнеса.
""")
    
    # Сниппеты
    snippets_path = cursor_path / 'сниппеты'
    snippets_path.mkdir(exist_ok=True)
    
    if as_template:
        # Расширенные шаблоны
        write_text_file(snippets_path / 'BRD_детальный.md', """# BRD — Бизнес требования

## 1. Введение

### 1.1 Цель документа
Определить бизнес-требования для [название проекта] и обеспечить общее понимание целей проекта всеми заинтересованными сторонами.

### 1.2 Область применения  
Данный документ описывает требования к [описание системы/процесса] и предназначен для команды разработки, тестирования и бизнес-пользователей.

### 1.3 Определения и сокращения
| Термин | Определение |
|--------|-------------|
| [Термин 1] | [Определение] |
| [Термин 2] | [Определение] |

## 2. Общее описание

### 2.1 Контекст проекта
**Текущая ситуация:** Описание существующих процессов и проблем

**Драйверы изменений:**
- Бизнес-потребность 1
- Бизнес-потребность 2
- Регуляторные требования

### 2.2 Заинтересованные стороны
| Роль | Представитель | Интересы | Влияние |
|------|---------------|----------|---------|
| Бизнес-спонсор | [ФИО] | ROI, соответствие стратегии | Высокое |
| Конечные пользователи | [Группа] | Удобство, эффективность | Среднее |

## 3. Бизнес-требования

### 3.1 Бизнес-цели
**БЦ-01:** [Название цели]
- **Описание:** Что должно быть достигнуто
- **Обоснование:** Почему это важно
- **Метрики:** Как измерить успех
- **Приоритет:** Высокий/Средний/Низкий

### 3.2 Бизнес-правила
**БП-01:** [Название правила]
- **Описание:** Формулировка правила
- **Источник:** Откуда взято (закон, политика, процедура)
- **Исключения:** Когда правило не применяется

## 4. Функциональные требования высокого уровня

### 4.1 Основные функции
**Ф-01:** [Название функции]
- **Описание:** Что должна делать система
- **Пользователи:** Кто будет использовать
- **Входы:** Какие данные нужны
- **Выходы:** Что получается на выходе
- **Бизнес-правила:** Связанные правила

## 5. Нефункциональные требования

### 5.1 Производительность
- Время отклика: не более X секунд
- Пропускная способность: X транзакций в час
- Доступность: 99.X% времени

### 5.2 Безопасность
- Аутентификация и авторизация
- Защита персональных данных
- Аудит действий пользователей

### 5.3 Интеграции
- Существующие системы для интеграции
- Форматы обмена данными
- Частота синхронизации

## 6. Ограничения

### 6.1 Технические ограничения
- Существующая инфраструктура
- Стандарты и политики ИТ
- Бюджетные ограничения

### 6.2 Временные ограничения
- Дедлайны проекта
- Зависимости от других проектов
- Сезонные факторы

## 7. Допущения и зависимости

### 7.1 Допущения
- [Допущение 1]: описание и влияние на проект
- [Допущение 2]: описание и влияние на проект

### 7.2 Зависимости
- [Зависимость 1]: от чего зависит и как влияет
- [Зависимость 2]: от чего зависит и как влияет

## 8. Критерии приемки

| ID | Критерий | Способ проверки | Ответственный |
|----|----------|-----------------|---------------|
| КП-01 | [Описание] | [Как проверить] | [Кто проверяет] |

---
**Версия:** 1.0  
**Дата:** [дата]  
**Автор:** [автор]  
**Статус:** [Черновик/На согласовании/Утверждено]
""")
        
        write_text_file(snippets_path / 'план_тестирования_детальный.md', """# План тестирования

## 1. Введение

### 1.1 Цель документа
Определить подход, объем и ресурсы для тестирования [название проекта].

### 1.2 Объект тестирования
**Система:** [Название системы]  
**Версия:** [Версия]  
**Компоненты:** [Список основных компонентов]

## 2. Стратегия тестирования

### 2.1 Типы тестирования

#### Функциональное тестирование
- **Unit Testing:** Модульное тестирование компонентов
- **Integration Testing:** Тестирование интеграций
- **System Testing:** Системное тестирование
- **User Acceptance Testing:** Приемочное тестирование

#### Нефункциональное тестирование
- **Performance Testing:** Тестирование производительности
- **Security Testing:** Тестирование безопасности  
- **Usability Testing:** Тестирование удобства использования
- **Compatibility Testing:** Тестирование совместимости

### 2.2 Уровни тестирования

| Уровень | Ответственный | Среда | Критерии входа | Критерии выхода |
|---------|---------------|-------|----------------|-----------------|
| Компонентное | Разработчик | Dev | Код готов | 100% покрытие unit-тестами |
| Интеграционное | QA | Test | Компоненты готовы | Интеграции работают |
| Системное | QA | Staging | Система собрана | Все функции работают |
| Приемочное | Бизнес | Prod-like | Система готова | Бизнес подтверждает |

## 3. Объем тестирования

### 3.1 Функции для тестирования
- ✅ [Функция 1]: Критичность - Высокая
- ✅ [Функция 2]: Критичность - Средняя  
- ✅ [Функция 3]: Критичность - Низкая

### 3.2 Функции НЕ для тестирования
- ❌ [Функция X]: Причина исключения
- ❌ [Функция Y]: Будет протестирована в следующем релизе

## 4. Подход к тестированию

### 4.1 Техники тестирования
- **Позитивное тестирование:** Проверка корректной работы
- **Негативное тестирование:** Проверка обработки ошибок
- **Граничное тестирование:** Проверка граничных значений
- **Эквивалентное разбиение:** Группировка похожих тест-кейсов

### 4.2 Автоматизация
**Кандидаты для автоматизации:**
- Регрессионные тесты
- Тесты производительности
- Smoke тесты
- API тесты

**Инструменты:**
- Unit тесты: [pytest/JUnit]
- API тесты: [Postman/REST Assured]  
- UI тесты: [Selenium/Playwright]
- Нагрузочные тесты: [JMeter/Locust]

## 5. Тестовая среда

### 5.1 Требования к среде
**Аппаратное обеспечение:**
- Сервер приложений: [характеристики]
- База данных: [характеристики]
- Сеть: [пропускная способность]

**Программное обеспечение:**
- ОС: [версия]
- СУБД: [версия]
- Браузеры: [список поддерживаемых]

### 5.2 Тестовые данные
**Типы данных:**
- Синтетические данные для функционального тестирования
- Обезличенные продуктивные данные для нагрузочного тестирования
- Специальные наборы для граничных случаев

**Управление данными:**
- Создание: автоматические скрипты
- Очистка: после каждого тест-рана
- Восстановление: из backup'ов

## 6. Критерии входа и выхода

### 6.1 Критерии входа в тестирование
- ✅ Техническое задание утверждено
- ✅ Тестовая среда готова
- ✅ Тестовые данные подготовлены
- ✅ Сборка системы успешно развернута

### 6.2 Критерии выхода из тестирования
- ✅ 100% критичных тест-кейсов выполнены
- ✅ 95% всех тест-кейсов выполнены успешно
- ✅ Нет критичных и высоких дефектов
- ✅ Производительность соответствует требованиям
- ✅ UAT успешно завершен

## 7. Управление рисками

| Риск | Вероятность | Влияние | Митигация |
|------|-------------|---------|-----------|
| Задержка готовности среды | Средняя | Высокое | Резервная среда, раннее планирование |
| Недоступность тестовых данных | Низкая | Среднее | Синтетические данные |
| Нестабильность сборки | Высокая | Высокое | Smoke тесты, откат к стабильной версии |

## 8. График тестирования

### 8.1 Основные этапы
| Этап | Начало | Окончание | Длительность | Ответственный |
|------|--------|-----------|--------------|---------------|
| Подготовка | [дата] | [дата] | X дней | QA Lead |
| Функциональное тестирование | [дата] | [дата] | X дней | QA Team |
| Нефункциональное тестирование | [дата] | [дата] | X дней | QA Team |
| UAT | [дата] | [дата] | X дней | Business Users |
| Регрессия | [дата] | [дата] | X дней | QA Team |

## 9. Ресурсы

### 9.1 Человеческие ресурсы
- **QA Lead:** планирование, координация
- **QA Engineer (2 чел.):** выполнение тестов
- **Automation Engineer:** автоматизация
- **Performance Engineer:** нагрузочное тестирование

### 9.2 Инструменты
- Управление тестами: [TestRail/Zephyr]
- Баг-трекинг: [Jira/Azure DevOps]
- Автоматизация: [Selenium/Playwright]
- CI/CD: [Jenkins/GitLab CI]

## 10. Отчетность

### 10.1 Метрики тестирования
- Покрытие тест-кейсами
- Процент выполненных тестов
- Количество найденных дефектов
- Время выполнения тестов

### 10.2 Отчеты
- **Ежедневно:** статус выполнения тестов
- **Еженедельно:** сводный отчет с метриками
- **По завершении:** итоговый отчет о качестве

---
**Версия:** 1.0  
**Дата:** [дата]  
**Автор:** [QA Lead]  
**Утверждено:** [Project Manager]
""")
        
    else:
        # Базовые шаблоны
        write_text_file(snippets_path / 'BRD_шаблон.md', """# BRD — Бизнес требования

## 1. Контекст и цели
Описание бизнес-контекста и целей проекта.

## 2. Заинтересованные стороны  
Ключевые роли и их интересы.

## 3. Объем и границы
Что входит и не входит в проект.

## 4. Бизнес-правила
Основные бизнес-правила и ограничения.

## 5. Метрики успеха
Как измерить достижение целей.
""")
        
        write_text_file(snippets_path / 'план_тестирования_шаблон.md', """# План тестирования

## 1. Объем тестирования
Что будет тестироваться.

## 2. Подход и стратегии  
Типы тестирования и техники.

## 3. Данные и окружение
Требования к тестовой среде.

## 4. Риски
Основные риски тестирования.

## 5. Критерии входа/выхода
Когда начинать и заканчивать тестирование.
""")
    
    print(f"✅ Создана конфигурация .cursor ({'расширенная' if as_template else 'базовая'})")
