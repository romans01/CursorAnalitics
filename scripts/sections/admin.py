#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Модуль создания раздела 00_Администрирование
"""

from pathlib import Path


def write_text_file(path: Path, content: str) -> None:
    """Записывает текстовый файл в UTF-8"""
    path.parent.mkdir(parents=True, exist_ok=True)
    with open(path, 'w', encoding='utf-8') as f:
        f.write(content)


def create_section(root: Path, as_template: bool = False) -> None:
    """Создает раздел 00_Администрирование"""
    
    section_path = root / '00_Администрирование'
    
    if as_template:
        # Детальный бриф с примерами
        write_text_file(section_path / 'бриф.md', """# Бриф проекта

## Контекст и предпосылки
**Проблема:** Опишите бизнес-проблему или возможность, которую решает проект.

*Пример: Отсутствует единая система аналитики продаж, менеджеры тратят 40% времени на сбор данных из разных источников.*

**Текущая ситуация:** Как решается проблема сейчас, какие есть боли.

## Цели проекта

### Бизнес-цели
- [ ] **Основная цель:** Что должно измениться в бизнесе
- [ ] **Метрики успеха:** KPI, которые покажут достижение цели
- [ ] **Временные рамки:** Когда должен быть результат

*Пример: Сократить время подготовки еженедельных отчетов с 8 часов до 1 часа к концу квартала*

### Технические цели
- [ ] Автоматизация процессов
- [ ] Интеграция систем
- [ ] Улучшение качества данных
- [ ] Повышение производительности

## Ограничения и допущения

### Ограничения
- **Бюджет:** Доступные ресурсы
- **Время:** Дедлайны и зависимости
- **Технические:** Существующая инфраструктура
- **Организационные:** Политики, процедуры

### Допущения
- Доступность ключевых стейкхолдеров
- Стабильность исходных данных
- Отсутствие изменений в смежных системах

## Критерии успеха

### Обязательные (Must Have)
- [ ] Критерий 1: Описание и способ измерения
- [ ] Критерий 2: Описание и способ измерения

### Желательные (Should Have)
- [ ] Критерий 3: Описание и способ измерения

### Возможные (Could Have)
- [ ] Критерий 4: Описание и способ измерения

## Риски

| Риск | Вероятность | Влияние | Митигация |
|------|-------------|---------|-----------|
| Недоступность данных | Средняя | Высокое | Альтернативные источники |
| Изменение требований | Высокая | Среднее | Агильный подход, частые ретро |

## Следующие шаги
1. [ ] Провести интервью с ключевыми стейкхолдерами
2. [ ] Проанализировать текущие процессы
3. [ ] Определить техническую архитектуру
4. [ ] Создать детальный план проекта

---
**Дата создания:** $(date)  
**Автор:** Имя аналитика  
**Версия:** 1.0
""")
        
        # Детальные заинтересованные стороны
        write_text_file(section_path / 'заинтересованные_стороны.md', """# Заинтересованные стороны

## Матрица стейкхолдеров

### Высокое влияние, высокий интерес (Управлять активно)
| Роль | ФИО | Контакты | Ответственность | Ожидания |
|------|-----|----------|-----------------|----------|
| Спонсор проекта | | email, телефон | Финансирование, принятие решений | ROI, соответствие стратегии |
| Владелец продукта | | email, телефон | Видение, приоритеты | Ценность для пользователей |

### Высокое влияние, низкий интерес (Поддерживать удовлетворенность)
| Роль | ФИО | Контакты | Ответственность | Подход к взаимодействию |
|------|-----|----------|-----------------|-------------------------|
| IT-директор | | email | Техническая архитектура | Еженедельные статус-репорты |
| Руководитель ИБ | | email | Безопасность данных | Согласование на этапе дизайна |

### Низкое влияние, высокий интерес (Информировать)
| Роль | ФИО | Контакты | Интересы | Канал коммуникации |
|------|-----|----------|----------|--------------------|
| Конечные пользователи | | email список | Удобство использования | Демо, обучение |
| Аналитики | | email | Качество данных | Slack канал |

### Низкое влияние, низкий интерес (Мониторить)
| Роль | ФИО | Контакты | Влияние на проект |
|------|-----|----------|-------------------|
| Смежные команды | | | Могут потребовать ресурсы |

## Команда проекта

### Основная команда
- **Руководитель проекта:** ФИО, роль в принятии решений
- **Бизнес-аналитик:** ФИО, сбор требований
- **Системный аналитик:** ФИО, техническое решение
- **Разработчик:** ФИО, реализация
- **Тестировщик:** ФИО, обеспечение качества

### Расширенная команда
- **Data Engineer:** работа с данными
- **DevOps:** инфраструктура
- **UX/UI:** пользовательский интерфейс

## Коммуникационный план

### Регулярные встречи
- **Стендапы:** ежедневно, 15 мин, основная команда
- **Статус с заказчиком:** еженедельно, 30 мин
- **Демо:** каждые 2 недели, 1 час
- **Ретроспективы:** каждые 2 недели, 1 час

### Каналы коммуникации
- **Срочные вопросы:** Телефон, Telegram
- **Рабочие вопросы:** Email, Slack
- **Документы:** Confluence, SharePoint
- **Код:** Git, code review

## RACI матрица

| Активность | Аналитик | Разработчик | Тестировщик | Заказчик |
|------------|----------|-------------|-------------|----------|
| Сбор требований | R | C | C | A |
| Проектирование | R | R | C | A |
| Разработка | C | R | C | I |
| Тестирование | C | C | R | A |
| Внедрение | C | R | C | A |

**R** - Responsible (Исполнитель)  
**A** - Accountable (Ответственный)  
**C** - Consulted (Консультант)  
**I** - Informed (Информируемый)

---
**Обновлено:** $(date)
""")
        
    else:
        # Базовые плейсхолдеры
        write_text_file(section_path / 'бриф.md', """# Бриф проекта

## Контекст
Опишите бизнес-контекст и предпосылки проекта.

## Цели
- Основная бизнес-цель
- Технические цели
- Метрики успеха

## Ограничения
- Временные рамки
- Бюджет
- Технические ограничения

## Критерии успеха
- [ ] Критерий 1
- [ ] Критерий 2

## Риски
Основные риски и способы их митигации.
""")
        
        write_text_file(section_path / 'заинтересованные_стороны.md', """# Заинтересованные стороны

## Ключевые роли
- **Спонсор проекта:** ФИО, контакты
- **Владелец продукта:** ФИО, контакты  
- **Конечные пользователи:** описание групп

## Команда проекта
- **Руководитель проекта:** ФИО
- **Бизнес-аналитик:** ФИО
- **Разработчик:** ФИО

## Коммуникации
- Регулярные встречи
- Каналы связи
- Эскалация вопросов
""")
    
    # Общие файлы для обоих режимов
    write_text_file(section_path / 'дорожная_карта.md', """# Дорожная карта проекта

## Фазы проекта

### Фаза 1: Инициация (недели 1-2)
- [ ] Сбор требований высокого уровня
- [ ] Анализ заинтересованных сторон
- [ ] Оценка рисков
- [ ] Создание команды проекта

### Фаза 2: Планирование (недели 3-4)  
- [ ] Детализация требований
- [ ] Техническое планирование
- [ ] Планирование ресурсов
- [ ] Создание backlog

### Фаза 3: Выполнение (недели 5-12)
- [ ] Итерация 1: MVP
- [ ] Итерация 2: Основной функционал
- [ ] Итерация 3: Дополнительные возможности
- [ ] Непрерывное тестирование

### Фаза 4: Завершение (недели 13-14)
- [ ] Финальное тестирование
- [ ] Обучение пользователей
- [ ] Передача в эксплуатацию
- [ ] Ретроспектива проекта

## Контрольные точки
- **Milestone 1:** Утверждение требований
- **Milestone 2:** Готовность архитектуры
- **Milestone 3:** MVP готов к тестированию
- **Milestone 4:** Готовность к внедрению

## Зависимости
- Внешние системы
- Ресурсы других команд
- Инфраструктурные изменения
""")
    
    write_text_file(section_path / 'журнал_решений_ADR.md', """# Журнал архитектурных решений (ADR)

## Формат записи
**Дата** | **Решение** | **Контекст** | **Рассмотренные альтернативы** | **Последствия**

---

## ADR-001: Выбор архитектуры данных
**Дата:** 2024-01-15  
**Статус:** Принято  

**Контекст:** Необходимо выбрать подход к хранению и обработке аналитических данных объемом ~1TB с требованием обновления раз в сутки.

**Решение:** Использовать DWH + витрины данных в PostgreSQL с ETL на Python/Airflow.

**Альтернативы:**
1. Озеро данных на S3 + Spark - отклонено из-за сложности
2. NoSQL (MongoDB) - отклонено из-за требований к ACID
3. Облачное решение (BigQuery) - отклонено из-за политик безопасности

**Последствия:**
- ✅ Знакомая команде технология
- ✅ Хорошая производительность для аналитики  
- ❌ Ограничения по масштабированию
- ❌ Необходимость управления инфраструктурой

---

## ADR-002: [Название решения]
**Дата:** YYYY-MM-DD  
**Статус:** [Предложено/Принято/Отклонено/Устарело]

**Контекст:** Описание ситуации и проблемы

**Решение:** Что было решено делать

**Альтернативы:** Какие варианты рассматривались

**Последствия:** Положительные и отрицательные эффекты

---

## Шаблон для новых записей

```
## ADR-XXX: [Название решения]
**Дата:** YYYY-MM-DD  
**Статус:** Предложено

**Контекст:** 

**Решение:** 

**Альтернативы:**

**Последствия:**
```
""")
    
    # Создаем папку архива с описанием
    archive_path = section_path / '99_Архив'
    archive_path.mkdir(exist_ok=True)
    
    if as_template:
        write_text_file(archive_path / 'README.md', """# Архив проекта

## Назначение
Хранение устаревших документов, старых версий файлов и материалов, которые больше не используются в активной работе, но могут понадобиться для справки.

## Принципы архивирования

### Что архивировать
- Устаревшие версии документов
- Отмененные решения и планы
- Старые презентации и отчеты
- Неактуальные технические спецификации
- Завершенные временные проекты

### Структура архива
```
99_Архив/
├── 2024/
│   ├── 01_январь/
│   ├── 02_февраль/
│   └── ...
├── старые_версии/
│   ├── требования_v1.0/
│   ├── архитектура_v2.0/
│   └── ...
├── отмененные_решения/
│   ├── ADR-005_отменен.md
│   └── план_интеграции_отменен.md
└── завершенные_подпроекты/
    ├── пилотный_проект_2023/
    └── миграция_данных_2024/
```

### Правила именования
- Добавляйте дату архивирования: `документ_YYYY-MM-DD_архив.md`
- Указывайте причину архивирования: `план_v1_отменен.md`
- Сохраняйте исходное название: `оригинальное_название_архив.md`

## Процедура архивирования

### 1. Подготовка к архивированию
- [ ] Убедитесь, что документ действительно не нужен
- [ ] Проверьте отсутствие ссылок на документ
- [ ] Уведомите команду об архивировании
- [ ] Создайте резервную копию при необходимости

### 2. Процесс архивирования
- [ ] Переместите файл в соответствующую папку архива
- [ ] Добавьте пометку "АРХИВ" в начало документа
- [ ] Укажите дату и причину архивирования
- [ ] Обновите индекс архивных документов

### 3. После архивирования
- [ ] Удалите ссылки на архивный документ из активных файлов
- [ ] Обновите документацию и индексы
- [ ] Уведомите заинтересованные стороны
- [ ] Запланируйте периодический пересмотр архива

## Автоматизация архивирования

### Интеграция с системами
- **Git:** использование тегов для версионирования
- **Confluence:** автоматическое архивирование страниц
- **SharePoint:** политики жизненного цикла документов

## Лучшие практики

### Организация
- Поддерживайте четкую структуру папок
- Используйте понятные названия файлов
- Ведите актуальный индекс документов
- Регулярно очищайте архив от ненужных файлов

### Коммуникация
- Уведомляйте команду об архивировании важных документов
- Документируйте причины архивирования
- Обучайте новых сотрудников работе с архивом
""")
    else:
        write_text_file(archive_path / 'README.md', """# Архив проекта

Здесь размещаются:
- Устаревшие версии документов
- Отмененные решения и планы
- Завершенные подпроекты
- Исторические материалы для справки
""")
    
    print(f"✅ Создан раздел: 00_Администрирование ({'с примерами' if as_template else 'базовый'})")
