#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from pathlib import Path

def write_text_file(path: Path, content: str) -> None:
    path.parent.mkdir(parents=True, exist_ok=True)
    with open(path, 'w', encoding='utf-8') as f:
        f.write(content)

def create_section(root: Path, as_template: bool = False) -> None:
    section_path = root / '08_Документация'
    
    write_text_file(section_path / 'как_запустить.md', """# Инструкция по запуску

## Предварительные требования
- Python 3.8+
- PostgreSQL 12+
- Redis 6+

## Установка зависимостей
```bash
pip install -r requirements.txt
```

## Настройка конфигурации
1. Скопировать `.env.example` в `.env`
2. Заполнить переменные окружения
3. Запустить миграции БД

## Запуск приложения
```bash
python app.py
```

## Проверка работоспособности
Откройте http://localhost:8000/health
""")
    
    write_text_file(section_path / 'руководство_по_структуре.md', """# Руководство по структуре проекта

## Назначение папок
- `00_Администрирование/` — управление проектом
- `01_Инициация_и_контекст/` — исследование области
- `02_Требования/` — формализация требований
- `03_Данные/` — управление данными
- `04_Аналитика/` — исследования и выводы
- `05_Решение_и_дизайн/` — проектирование
- `06_Поставка_и_отчетность/` — результаты
- `07_Качество_и_тестирование/` — обеспечение качества
- `08_Документация/` — техническая документация

## Правила работы
1. Обновляйте CHANGELOG.md при изменениях
2. Используйте ADR для архитектурных решений
3. Архивируйте устаревшие материалы в `99_Архив/`
""")
    
    write_text_file(section_path / 'FAQ.md', """# Часто задаваемые вопросы

## Q: Как добавить новое требование?
A: Добавьте в соответствующий раздел `02_Требования/` и обновите матрицу трассируемости.

## Q: Где хранить тестовые данные?
A: В папке `03_Данные/выборки_и_примеры/` с описанием в README.

## Q: Как оформить архитектурное решение?
A: Добавьте запись в `00_Администрирование/журнал_решений_ADR.md` по шаблону.

## Q: Куда поместить устаревшие документы?
A: Переместите в `99_Архив/` с указанием даты архивирования.
""")
    
    print(f"✅ Создан раздел: 08_Документация ({'с примерами' if as_template else 'базовый'})")
