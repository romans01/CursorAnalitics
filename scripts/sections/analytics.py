#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from pathlib import Path

def write_text_file(path: Path, content: str) -> None:
    path.parent.mkdir(parents=True, exist_ok=True)
    with open(path, 'w', encoding='utf-8') as f:
        f.write(content)

def create_section(root: Path, as_template: bool = False) -> None:
    section_path = root / '04_Аналитика'
    
    for subdir in ['ноутбуки', 'эксперименты']:
        (section_path / subdir).mkdir(parents=True, exist_ok=True)
    
    content = "# Аналитические исследования" if as_template else "# Аналитика"
    
    write_text_file(section_path / 'гипотезы.md', f"""{content}

## Гипотезы для проверки

### H1: [Название гипотезы]
**Формулировка:** Мы предполагаем, что [предположение]
**Обоснование:** Почему мы так думаем
**Метрика:** Как измерить
**Критерий успеха:** При каком значении гипотеза подтверждена
**Приоритет:** Высокий/Средний/Низкий
""")
    
    write_text_file(section_path / 'выводы.md', f"""{content}

## Ключевые выводы исследования

### Подтвержденные гипотезы
- [Гипотеза 1]: краткое описание результата

### Отклоненные гипотезы  
- [Гипотеза 2]: почему отклонена

### Рекомендации
1. [Рекомендация 1] на основе [данных/анализа]
2. [Рекомендация 2] с учетом [ограничений]

### Ограничения анализа
- Качество исходных данных
- Временные рамки исследования
- Доступность данных
""")
    
    # Добавляем примеры для папок
    if as_template:
        # Примеры ноутбуков
        write_text_file(section_path / 'ноутбуки/README.md', """# Jupyter Notebooks

## Назначение
Интерактивные блокноты для исследовательского анализа данных, прототипирования алгоритмов и документирования результатов.

## Структура файлов
- `01_data_exploration.ipynb` — первичный анализ данных
- `02_data_cleaning.ipynb` — очистка и подготовка данных
- `03_feature_engineering.ipynb` — создание признаков
- `04_modeling.ipynb` — построение моделей
- `05_results_analysis.ipynb` — анализ результатов

## Соглашения по именованию
- Префикс с номером для порядка выполнения
- Описательное название на английском
- Расширение `.ipynb`

## Стандарты оформления

### Структура ноутбука
1. **Заголовок и описание** — цель анализа, краткое описание
2. **Импорты** — все необходимые библиотеки
3. **Загрузка данных** — подключение к источникам
4. **Исследовательский анализ** — EDA с визуализацией
5. **Выводы** — ключевые инсайты и рекомендации

### Требования к коду
- Комментарии на русском языке
- Markdown ячейки для пояснений
- Очистка вывода перед коммитом
- Версионирование больших датасетов отдельно

## Полезные библиотеки
```python
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import scipy.stats as stats
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
```

## Шаблон ноутбука
```python
# Заголовок
# Анализ [название]: [краткое описание]
# Автор: [ФИО]
# Дата: [YYYY-MM-DD]

# Импорты
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Настройки
plt.style.use('seaborn')
pd.set_option('display.max_columns', None)

# Загрузка данных
data = pd.read_csv('path/to/data.csv')

# Первичный осмотр
print("Размер данных:", data.shape)
print("\\nИнформация о данных:")
data.info()

# Анализ и выводы...
```
""")
        
        write_text_file(section_path / 'ноутбуки/template_notebook.py', """# Шаблон для Jupyter Notebook
# Сохраните как .ipynb файл

# =============================================================================
# Анализ данных: [Название проекта]
# Автор: [ФИО]
# Дата: [YYYY-MM-DD]
# Цель: [Описание цели анализа]
# =============================================================================

# %% [markdown]
# # Анализ данных: [Название]
# 
# ## Цель исследования
# [Описать цель анализа]
# 
# ## Гипотезы
# 1. [Гипотеза 1]
# 2. [Гипотеза 2]
# 
# ## Источники данных
# - [Источник 1]: описание
# - [Источник 2]: описание

# %% Импорты и настройки
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

# Настройки визуализации
plt.style.use('seaborn-v0_8')
plt.rcParams['figure.figsize'] = (12, 8)
plt.rcParams['font.size'] = 12
sns.set_palette("husl")

# Настройки pandas
pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', 100)

print("✅ Библиотеки загружены")

# %% [markdown]
# ## 1. Загрузка и первичный осмотр данных

# %% Загрузка данных
# Замените на ваши источники данных
data = pd.read_csv('data/sample_data.csv')

print(f"Размер данных: {data.shape}")
print(f"Период данных: {data['date'].min()} - {data['date'].max()}")

# %% Первичный анализ
print("Информация о данных:")
data.info()

print("\\nСтатистические характеристики:")
data.describe()

print("\\nПропущенные значения:")
missing = data.isnull().sum()
print(missing[missing > 0])

# %% [markdown]
# ## 2. Исследовательский анализ данных (EDA)

# %% Распределения числовых переменных
numeric_cols = data.select_dtypes(include=[np.number]).columns
n_cols = len(numeric_cols)
n_rows = (n_cols + 2) // 3

fig, axes = plt.subplots(n_rows, 3, figsize=(15, 5*n_rows))
axes = axes.flatten() if n_rows > 1 else [axes]

for i, col in enumerate(numeric_cols):
    if i < len(axes):
        data[col].hist(bins=30, ax=axes[i])
        axes[i].set_title(f'Распределение {col}')
        axes[i].set_xlabel(col)
        axes[i].set_ylabel('Частота')

# Скрываем лишние subplot'ы
for i in range(len(numeric_cols), len(axes)):
    axes[i].set_visible(False)

plt.tight_layout()
plt.show()

# %% Корреляционная матрица
plt.figure(figsize=(10, 8))
correlation_matrix = data[numeric_cols].corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', center=0)
plt.title('Корреляционная матрица')
plt.show()

# %% [markdown]
# ## 3. Проверка гипотез

# %% Гипотеза 1
# [Код для проверки первой гипотезы]
print("Результаты проверки гипотезы 1:")
# Ваш код здесь

# %% Гипотеза 2
# [Код для проверки второй гипотезы]
print("Результаты проверки гипотезы 2:")
# Ваш код здесь

# %% [markdown]
# ## 4. Выводы и рекомендации

# %% Ключевые инсайты
insights = [
    "Инсайт 1: [описание]",
    "Инсайт 2: [описание]", 
    "Инсайт 3: [описание]"
]

print("🔍 Ключевые выводы:")
for i, insight in enumerate(insights, 1):
    print(f"{i}. {insight}")

# %% Рекомендации
recommendations = [
    "Рекомендация 1: [описание]",
    "Рекомендация 2: [описание]",
    "Рекомендация 3: [описание]"
]

print("\\n💡 Рекомендации:")
for i, rec in enumerate(recommendations, 1):
    print(f"{i}. {rec}")

# %% [markdown]
# ## 5. Следующие шаги
# 
# - [ ] Собрать дополнительные данные по [тема]
# - [ ] Провести A/B тест для проверки [гипотеза]
# - [ ] Создать модель для предсказания [целевая переменная]
# - [ ] Автоматизировать анализ в виде дашборда
""")
        
        # Примеры экспериментов
        write_text_file(section_path / 'эксперименты/README.md', """# Эксперименты

## Назначение
Папка для проведения и документирования аналитических экспериментов, A/B тестов, и проверки гипотез.

## Типы экспериментов

### A/B тесты
- `ab_test_[название]/` — папка с материалами A/B теста
- `experiment_design.md` — дизайн эксперимента
- `results_analysis.ipynb` — анализ результатов
- `statistical_tests.py` — статистические тесты

### Машинное обучение
- `ml_experiment_[название]/` — папка ML эксперимента
- `model_comparison.ipynb` — сравнение моделей
- `feature_importance.py` — анализ важности признаков
- `hyperparameter_tuning.ipynb` — подбор гиперпараметров

### Бизнес-эксперименты
- `business_experiment_[название]/` — бизнес-эксперимент
- `hypothesis_testing.md` — проверка бизнес-гипотез
- `impact_analysis.ipynb` — анализ влияния на бизнес-метрики

## Структура эксперимента

### 1. Планирование
```
experiment_[название]/
├── README.md              # Описание эксперимента
├── hypothesis.md          # Формулировка гипотез
├── experiment_design.md   # Дизайн эксперимента
└── success_metrics.md     # Метрики успеха
```

### 2. Выполнение
```
├── data/                  # Данные эксперимента
├── notebooks/             # Jupyter notebooks
├── scripts/               # Python скрипты
└── config/                # Конфигурационные файлы
```

### 3. Анализ результатов
```
├── results/               # Результаты эксперимента
├── reports/               # Отчеты и презентации
├── conclusions.md         # Выводы и рекомендации
└── next_steps.md          # Следующие шаги
```

## Шаблон описания эксперимента

### Название эксперимента: [Название]

**Дата начала:** [YYYY-MM-DD]  
**Дата окончания:** [YYYY-MM-DD]  
**Ответственный:** [ФИО]

#### Контекст
Описание бизнес-контекста и предпосылок для эксперимента.

#### Гипотеза
**H0:** [Нулевая гипотеза]  
**H1:** [Альтернативная гипотеза]

#### Метрики
- **Основная метрика:** [название и способ расчета]
- **Дополнительные метрики:** [список]

#### Дизайн эксперимента
- **Тип:** A/B тест / Многовариантный тест / Когортный анализ
- **Размер выборки:** [количество участников]
- **Длительность:** [количество дней/недель]
- **Критерий значимости:** α = 0.05
- **Мощность теста:** 1-β = 0.8

#### Результаты
- **Статистическая значимость:** p-value = [значение]
- **Размер эффекта:** [значение и интерпретация]
- **Доверительный интервал:** [нижняя граница; верхняя граница]

#### Выводы
[Интерпретация результатов и бизнес-выводы]

#### Рекомендации
- [ ] Рекомендация 1
- [ ] Рекомендация 2
- [ ] Рекомендация 3
""")
        
        write_text_file(section_path / 'эксперименты/experiment_template.md', """# Шаблон эксперимента: [Название]

## Основная информация
**Дата создания:** $(date)  
**Автор:** [ФИО]  
**Статус:** Планирование / В процессе / Завершен  
**Приоритет:** Высокий / Средний / Низкий

## 1. Контекст и обоснование

### Бизнес-проблема
Опишите проблему или возможность, которую исследует эксперимент.

### Предпосылки
- Наблюдение 1: [описание]
- Наблюдение 2: [описание]
- Гипотеза из предыдущих исследований: [описание]

## 2. Гипотезы

### Основная гипотеза
**H0 (нулевая):** [Формулировка нулевой гипотезы]  
**H1 (альтернативная):** [Формулировка альтернативной гипотезы]

### Дополнительные гипотезы
1. **H2:** [Вторая гипотеза]
2. **H3:** [Третья гипотеза]

## 3. Метрики и KPI

### Основные метрики (Primary)
| Метрика | Описание | Способ расчета | Ожидаемое изменение |
|---------|----------|----------------|---------------------|
| [Метрика 1] | [Описание] | [Формула] | [+/-X%] |

### Дополнительные метрики (Secondary)
| Метрика | Описание | Способ расчета |
|---------|----------|----------------|
| [Метрика 2] | [Описание] | [Формула] |
| [Метрика 3] | [Описание] | [Формула] |

### Guardrail метрики
Метрики, которые не должны ухудшиться:
- [Метрика безопасности 1]: не более чем на X%
- [Метрика безопасности 2]: не более чем на Y%

## 4. Дизайн эксперимента

### Тип эксперимента
- [ ] A/B тест
- [ ] Многовариантный тест (A/B/C)
- [ ] Факторный эксперимент
- [ ] Когортный анализ
- [ ] Другое: [описание]

### Параметры
- **Единица рандомизации:** Пользователь / Сессия / Другое
- **Размер выборки:** [количество] участников в каждой группе
- **Длительность:** [X] дней/недель
- **Уровень значимости:** α = 0.05
- **Мощность теста:** 1-β = 0.80
- **Минимальный детектируемый эффект:** [X%]

### Группы эксперимента
| Группа | Описание | Доля трафика | Ожидаемый размер |
|--------|----------|--------------|------------------|
| Контроль | Текущая версия | 50% | [количество] |
| Тест | Новая версия | 50% | [количество] |

## 5. Критерии включения/исключения

### Включение в эксперимент
- [ ] Активные пользователи за последние 30 дней
- [ ] Пользователи с полным профилем
- [ ] [Другие критерии]

### Исключение из эксперимента
- [ ] Внутренние пользователи компании
- [ ] Боты и автоматизированный трафик
- [ ] [Другие критерии]

## 6. План анализа

### Статистические тесты
- **Для непрерывных метрик:** t-test / Mann-Whitney U
- **Для категориальных метрик:** Chi-square / Fisher's exact test
- **Для пропорций:** Z-test

### Сегментация
Планируемые разрезы для анализа:
- По устройствам (desktop/mobile)
- По регионам
- По времени (будни/выходные)
- [Другие сегменты]

## 7. Риски и митигация

| Риск | Вероятность | Влияние | Митигация |
|------|-------------|---------|-----------|
| Техническая ошибка в рандомизации | Низкая | Высокое | Проверка AA теста |
| Сезонные эффекты | Средняя | Среднее | Учет исторических данных |
| [Другой риск] | [Уровень] | [Уровень] | [План действий] |

## 8. План коммуникации

### Заинтересованные стороны
- **Спонсор:** [ФИО и роль]
- **Команда разработки:** [ФИО]
- **Аналитики:** [ФИО]
- **Бизнес-пользователи:** [ФИО]

### График отчетности
- **Промежуточные отчеты:** каждые [X] дней
- **Финальный отчет:** [дата]
- **Презентация результатов:** [дата]

## 9. Критерии успеха

### Статистические критерии
- [ ] p-value < 0.05 для основной метрики
- [ ] Размер эффекта > [минимальный практически значимый эффект]
- [ ] Guardrail метрики не ухудшились значимо

### Бизнес-критерии
- [ ] Улучшение основной метрики на [X%] или более
- [ ] Положительный ROI от внедрения изменений
- [ ] Отсутствие негативного влияния на пользовательский опыт

## 10. План внедрения

### При положительных результатах
1. [ ] Подготовка технического плана развертывания
2. [ ] Согласование с командой разработки
3. [ ] Поэтапное развертывание (0% → 25% → 50% → 100%)
4. [ ] Мониторинг метрик после запуска

### При отрицательных результатах
1. [ ] Анализ причин неудачи
2. [ ] Документирование выводов
3. [ ] Планирование следующих итераций
4. [ ] Откат изменений

## 11. Чек-лист запуска

### Подготовка
- [ ] Техническая реализация готова
- [ ] A/A тест проведен и прошел успешно
- [ ] Система трекинга настроена
- [ ] Дашборд для мониторинга создан
- [ ] План анализа утвержден

### Запуск
- [ ] Эксперимент запущен в назначенное время
- [ ] Рандомизация работает корректно
- [ ] Метрики собираются правильно
- [ ] Заинтересованные стороны уведомлены

### Мониторинг
- [ ] Ежедневная проверка метрик
- [ ] Контроль качества данных
- [ ] Отслеживание технических проблем
- [ ] Регулярные отчеты стейкхолдерам

---

**Дата последнего обновления:** $(date)  
**Версия документа:** 1.0
""")
    else:
        # Базовые описания
        write_text_file(section_path / 'ноутбуки/README.md', """# Jupyter Notebooks

Здесь размещаются:
- Интерактивные блокноты для анализа данных
- Исследовательский анализ (EDA)
- Прототипы алгоритмов и моделей
- Документирование результатов анализа
""")
        
        write_text_file(section_path / 'эксперименты/README.md', """# Эксперименты

Здесь размещаются:
- A/B тесты и многовариантные эксперименты
- Проверка гипотез
- Машинное обучение эксперименты
- Анализ результатов экспериментов
""")
    
    print(f"✅ Создан раздел: 04_Аналитика ({'с примерами' if as_template else 'базовый'})")
